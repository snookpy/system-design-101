"use strict";(self.webpackChunksystem_design_101_docs=self.webpackChunksystem_design_101_docs||[]).push([[5952],{8680:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"System design fundamentals","href":"/system-design-101/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"CAP Theory","href":"/system-design-101/docs/cap-theory","docId":"cap-theory","unlisted":false},{"type":"link","label":"Load balancing","href":"/system-design-101/docs/load-balancing","docId":"load-balancing","unlisted":false},{"type":"link","label":"Indexes","href":"/system-design-101/docs/Indexes","docId":"Indexes","unlisted":false}]},"docs":{"cap-theory":{"id":"cap-theory","title":"CAP Theory","description":"it is impossible for a distributed system to simultaneously provide all three properties: consistency, availability, and partition tolerance.","sidebar":"tutorialSidebar"},"Indexes":{"id":"Indexes","title":"Indexes","description":"Indexes are well known when it comes to databases. Sooner or later there comes a time when database performance is no longer satisfactory. One of the very first things you should turn to when that happens is database indexing.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"System design fundamentals","description":"This is a collection of notes and resources for learning system design fundamentals. The goal is to provide a comprehensive overview of the key concepts and principles of system design.","sidebar":"tutorialSidebar"},"load-balancing":{"id":"load-balancing","title":"Load balancing","description":"Helps distribute incoming requests and traffic evenly across multiple servers.","sidebar":"tutorialSidebar"}}}}')}}]);